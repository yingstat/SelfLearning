"0","# flank() returns the regions that flank (are on the side of) each range in an IRanges object."
"0","# flank() is useful in creating ranges upstream and downstream of protein coding genes that could contain promoter sequences."
"0","# For example, if our ranges demarcate the transition start site (TSS)"
"0","# and transcription termination site (TTS) of a set of genes, flank() can be used to create a set of ranges upstream of the TSS that contain promoters."
"0","x <- IRanges(start=c(40, 80), end=c(67, 114))"
"0","x"
"1","IRanges"
"1"," object with "
"1","2"
"1"," "
"1","ranges"
"1"," and "
"1","0"
"1"," metadata "
"1","columns"
"1",":
"
"1","     "
"1","     start"
"1","       end"
"1","     width"
"1","
     "
"1"," <integer>"
"1"," <integer>"
"1"," <integer>"
"1","
  [1]"
"1","        40"
"1","        67"
"1","        28"
"1","
  [2]"
"1","        80"
"1","       114"
"1","        35"
"1","
"
"0","# By default, flank() creates ranges width positions upstream of the ranges passed to it. Flanking ranges downstream can be created by setting start=FALSE:"
"0","flank(x, width = 7)"
"1","IRanges"
"1"," object with "
"1","2"
"1"," "
"1","ranges"
"1"," and "
"1","0"
"1"," metadata "
"1","columns"
"1",":
"
"1","     "
"1","     start"
"1","       end"
"1","     width"
"1","
     "
"1"," <integer>"
"1"," <integer>"
"1"," <integer>"
"1","
  [1]"
"1","        33"
"1","        39"
"1","         7"
"1","
  [2]"
"1","        73"
"1","        79"
"1","         7"
"1","
"
"0","flank(x, width = 7, start = FALSE)"
"1","IRanges"
"1"," object with "
"1","2"
"1"," "
"1","ranges"
"1"," and "
"1","0"
"1"," metadata "
"1","columns"
"1",":
"
"1","     "
"1","     start"
"1","       end"
"1","     width"
"1","
     "
"1"," <integer>"
"1"," <integer>"
"1"," <integer>"
"1","
  [1]"
"1","        68"
"1","        74"
"1","         7"
"1","
  [2]"
"1","       115"
"1","       121"
"1","         7"
"1","
"
"0","f <- plotIRanges(x) + xlim(20, 125) + ggtitle(""original"") + theme(plot.title = element_text(hjust = 0.5)) "
"2","Scale for 'x' is already present. Adding another scale for 'x', which will replace
the existing scale.
"
"0","f.s <- plotIRanges(flank(x, width = 7)) + xlim(20, 125) + ggtitle(""upstream"") + theme(plot.title = element_text(hjust = 0.5)) "
"2","Scale for 'x' is already present. Adding another scale for 'x', which will replace
the existing scale.
"
"0","f.e <- plotIRanges(flank(x, width = 7, start = FALSE)) + xlim(20, 125) + ggtitle(""downstream"") + theme(plot.title = element_text(hjust = 0.5)) "
"2","Scale for 'x' is already present. Adding another scale for 'x', which will replace
the existing scale.
"
"0","grid.arrange(f, f.s, f.e)"
